H. Ksyusha and the Loaded Set
time limit per test3 seconds
memory limit per test512 megabytes
Ksyusha decided to start a game development company. To stand out among competitors and achieve success, she decided to write her own game engine. The engine must support a set initially consisting of n
 distinct integers a1,a2,…,an
.

The set will undergo m
 operations sequentially. The operations can be of the following types:

Insert element x
 into the set;
Remove element x
 from the set;
Report the k
-load of the set.
The k
-load of the set is defined as the minimum positive integer d
 such that the integers d,d+1,…,d+(k−1)
 do not appear in this set. For example, the 3
-load of the set {3,4,6,11}
 is 7
, since the integers 7,8,9
 are absent from the set, and no smaller value fits.

Ksyusha is busy with management tasks, so you will have to write the engine. Implement efficient support for the described operations.

Input
The first line contains an integer t
 (1≤t≤104
) — the number of test cases.

The following lines describe the test cases.

The first line contains an integer n
 (1≤n≤2⋅105
) — the initial size of the set.

The second line contains n
 integers a1,a2,…,an
 (1≤a1<a2<…<an≤2⋅106
) — the initial state of the set.

The third line contains an integer m
 (1≤m≤2⋅105
) — the number of operations.

The next m
 lines contain the operations. The operations are given in the following format:

+ x
 (1≤x≤2⋅106
) — insert element x
 into the set (it is guaranteed that x
 is not in the set);
- x
 (1≤x≤2⋅106
) — remove element x
 from the set (it is guaranteed that x
 is in the set);
? k
 (1≤k≤2⋅106
) — output the value of the k
-load of the set.
It is guaranteed that the sum of n
 across all test cases does not exceed 2⋅105
, and the same holds for m
.

Output
For each test case, output the answers to the operations of type "?".

Example
InputCopy
3
5
1 2 5 905 2000000
15
- 2
? 2
? 1
- 1
? 1
+ 4
+ 2
? 2
+ 6
- 4
+ 7
? 2
? 3
? 4
? 2000000
5
3 4 5 6 8
9
? 5
- 5
? 5
+ 1
? 2
- 6
- 8
+ 6
? 5
5
6 7 8 9 10
10
? 5
- 6
? 4
- 10
+ 5
- 8
+ 3
+ 2
- 3
+ 10
OutputCopy
2 2 1 6 3 8 8 2000001 
9 9 9 7 
1 1 