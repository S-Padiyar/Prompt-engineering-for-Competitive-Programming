import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader in;
    static StringTokenizer tok;

    static String nextToken() throws IOException {
        while (tok == null || !tok.hasMoreTokens()) {
            String line = in.readLine();
            if (line == null) return null;
            tok = new StringTokenizer(line);
        }
        return tok.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    static int gcd(int a, int b) {
        while (b != 0) {
            int t = a % b;
            a = b;
            b = t;
        }
        return a;
    }

    public static void main(String[] args) throws IOException {
        in = new BufferedReader(new InputStreamReader(System.in));
        tok = null;

        int t = nextInt();
        StringBuilder out = new StringBuilder();

        while (t-- > 0) {
            int n = nextInt();
            int[] p = new int[n+1];
            for (int i = 1; i <= n; i++) {
                p[i] = nextInt();
            }

            int[] pos = new int[n+1];
            for (int i = 1; i <= n; i++) {
                pos[p[i]] = i;
            }

            long answer = 0;
            for (int i = 1; i <= n; i++) {
                int a = p[i], x = i;
                int d1 = gcd(a, x);
                int x1 = x / d1;
                int a1 = a / d1;

                for (int v = x1; v <= n; v += x1) {
                    int j = pos[v];
                    if (j <= i) continue;
                    int k = v / x1;
                    int g = gcd(a1, j);
                    int yPrime = j / g;
                    if (k % yPrime == 0) {
                        answer++;
                    }
                }
            }

            out.append(answer).append('\n');
        }

        System.out.print(out);
    }
}