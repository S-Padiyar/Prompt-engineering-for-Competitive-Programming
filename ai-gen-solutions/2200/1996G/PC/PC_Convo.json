[
  {
    "timestamp": "2025-07-24T05:58:11.722004",
    "role": "user",
    "content": "Please provide a single complete Java code solution (one block of code) for the problem, without any extra explanation."
  },
  {
    "timestamp": "2025-07-24T05:59:53.403103",
    "role": "assistant",
    "content": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int MAXM = 200_000 + 5;\n    static long[] rnd = new long[MAXM];\n\n    public static void main(String[] args) throws IOException {\n        Random rand = new Random(1234567L);\n        for (int i = 0; i < MAXM; i++) {\n            rnd[i] = rand.nextLong();\n        }\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(new BufferedOutputStream(System.out));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int t = Integer.parseInt(st.nextToken());\n        while (t-- > 0) {\n            st = new StringTokenizer(br.readLine());\n            int n = Integer.parseInt(st.nextToken()), m = Integer.parseInt(st.nextToken());\n            long[] ev = new long[n];\n            Arrays.fill(ev, 0L);\n\n            for (int i = 0; i < m; i++) {\n                st = new StringTokenizer(br.readLine());\n                int a = Integer.parseInt(st.nextToken()) - 1;\n                int b = Integer.parseInt(st.nextToken()) - 1;\n                int dCW = (b - a + n) % n;\n                int dCCW = n - dCW;\n                int L, R;\n                long tag = rnd[i];\n                if (dCW <= dCCW) {\n                    L = a;\n                    R = (b - 1 + n) % n;\n                } else {\n                    L = b;\n                    R = (a - 1 + n) % n;\n                }\n                if (L <= R) {\n                    ev[L] ^= tag;\n                    if (R + 1 < n) ev[R + 1] ^= tag;\n                } else {\n                    ev[L] ^= tag;\n                    ev[0] ^= tag;\n                    if (R + 1 < n) ev[R + 1] ^= tag;\n                }\n            }\n\n            long[] hs = new long[n];\n            long cur = 0;\n            for (int i = 0; i < n; i++) {\n                cur ^= ev[i];\n                hs[i] = cur;\n            }\n            Arrays.sort(hs);\n\n            int best = 1, cnt = 1;\n            for (int i = 1; i < n; i++) {\n                if (hs[i] == hs[i - 1]) cnt++;\n                else {\n                    if (cnt > best) best = cnt;\n                    cnt = 1;\n                }\n            }\n            if (cnt > best) best = cnt;\n            pw.println(n - best);\n        }\n        pw.flush();\n    }\n}\n```"
  }
]