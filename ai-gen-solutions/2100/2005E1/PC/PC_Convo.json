[
  {
    "timestamp": "2025-07-24T06:01:20.550655",
    "role": "user",
    "content": "Please provide only the complete Java solution code in one block, without any additional explanations or commentary, ready for submission."
  },
  {
    "timestamp": "2025-07-24T06:02:08.797433",
    "role": "assistant",
    "content": "```java\nimport java.io.*;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int t = Integer.parseInt(st.nextToken());\n        StringBuilder sb = new StringBuilder();\n        while (t-- > 0) {\n            st = new StringTokenizer(br.readLine());\n            int l = Integer.parseInt(st.nextToken());\n            int n = Integer.parseInt(st.nextToken());\n            int m = Integer.parseInt(st.nextToken());\n            int[] a = new int[l];\n            st = new StringTokenizer(br.readLine());\n            for (int i = 0; i < l; i++) {\n                a[i] = Integer.parseInt(st.nextToken());\n            }\n            int[][] b = new int[n+1][m+1];\n            for (int i = 1; i <= n; i++) {\n                st = new StringTokenizer(br.readLine());\n                for (int j = 1; j <= m; j++) {\n                    b[i][j] = Integer.parseInt(st.nextToken());\n                }\n            }\n            boolean[][] dpNext = new boolean[n+2][m+2];\n            boolean[][] dpCur  = new boolean[n+2][m+2];\n            int[][] S = new int[n+2][m+2];\n            for (int idx = l - 1; idx >= 0; idx--) {\n                int want = a[idx];\n                for (int r = n; r >= 1; r--) {\n                    for (int c = m; c >= 1; c--) {\n                        int mVal = (b[r][c] == want && !dpNext[r][c]) ? 1 : 0;\n                        S[r][c] = S[r+1][c] + S[r][c+1] - S[r+1][c+1] + mVal;\n                    }\n                }\n                for (int r = 0; r <= n; r++) {\n                    for (int c = 0; c <= m; c++) {\n                        dpCur[r][c] = S[r+1][c+1] > 0;\n                    }\n                }\n                boolean[][] tmp = dpNext;\n                dpNext = dpCur;\n                dpCur = tmp;\n            }\n            sb.append(dpNext[0][0] ? 'T' : 'N').append('\\n');\n        }\n        System.out.print(sb);\n    }\n}\n```"
  }
]