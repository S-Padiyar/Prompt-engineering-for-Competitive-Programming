[
  {
    "timestamp": "2025-07-24T06:12:18.617498",
    "role": "user",
    "content": "Please provide only the complete Java solution (one block of code) without any additional explanation."
  },
  {
    "timestamp": "2025-07-24T06:17:22.310762",
    "role": "assistant",
    "content": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(in.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n        int q = Integer.parseInt(st.nextToken());\n        int[][] b = new int[k][n];\n        for (int i = 0; i < n; i++) {\n            st = new StringTokenizer(in.readLine());\n            for (int j = 0; j < k; j++) {\n                int aij = Integer.parseInt(st.nextToken());\n                if (i == 0) {\n                    b[j][0] = aij;\n                } else {\n                    b[j][i] = b[j][i - 1] | aij;\n                }\n            }\n        }\n        StringBuilder out = new StringBuilder();\n        class BS {\n            int lowerBound(int[] arr, int val) {\n                int lo = 0, hi = arr.length;\n                while (lo < hi) {\n                    int mid = (lo + hi) >>> 1;\n                    if (arr[mid] >= val) hi = mid;\n                    else lo = mid + 1;\n                }\n                return lo;\n            }\n            int upperBound(int[] arr, int val) {\n                int lo = 0, hi = arr.length;\n                while (lo < hi) {\n                    int mid = (lo + hi) >>> 1;\n                    if (arr[mid] > val) hi = mid;\n                    else lo = mid + 1;\n                }\n                return lo;\n            }\n        }\n        BS bs = new BS();\n        for (int _q = 0; _q < q; _q++) {\n            int m = Integer.parseInt(in.readLine());\n            int L = 0, R = n - 1;\n            for (int t = 0; t < m; t++) {\n                st = new StringTokenizer(in.readLine());\n                int r = Integer.parseInt(st.nextToken()) - 1;\n                char op = st.nextToken().charAt(0);\n                int c = Integer.parseInt(st.nextToken());\n                int[] col = b[r];\n                if (op == '<') {\n                    if (col[0] >= c) {\n                        L = 1;\n                        R = 0;\n                    } else {\n                        int pos = bs.lowerBound(col, c);\n                        R = Math.min(R, pos - 1);\n                    }\n                } else {\n                    if (col[n - 1] <= c) {\n                        L = 1;\n                        R = 0;\n                    } else {\n                        int pos = bs.upperBound(col, c);\n                        L = Math.max(L, pos);\n                    }\n                }\n            }\n            if (L <= R) {\n                out.append(L + 1).append('\\n');\n            } else {\n                out.append(-1).append('\\n');\n            }\n        }\n        System.out.print(out);\n    }\n}"
  }
]